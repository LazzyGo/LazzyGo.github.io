<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>python - 分类 - Go博客</title>
        <link>http://localhost:1313/categories/python/</link>
        <description>python - 分类 - Go博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>lazzygo@outlook.com (Go博客)</managingEditor>
            <webMaster>lazzygo@outlook.com (Go博客)</webMaster><lastBuildDate>Wed, 09 Mar 2022 05:50:17 &#43;0000</lastBuildDate><atom:link href="http://localhost:1313/categories/python/" rel="self" type="application/rss+xml" /><item>
    <title>Fastapi用和不用await的区别</title>
    <link>http://localhost:1313/fastapi-await/</link>
    <pubDate>Wed, 09 Mar 2022 05:50:17 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://localhost:1313/fastapi-await/</guid>
    <description><![CDATA[测试代码 用100个并发请求分别测试下面4个接口：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  from fastapi import APIRouter import time import asyncio router = APIRouter() @router.get(&#34;/a&#34;) async def a(): time.sleep(1) return {&#34;message&#34;: &#34;异步模式，但是同步执行sleep函数，执行过程是串行的&#34;} @router.get(&#34;/b&#34;) async def b(): loop = asyncio.get_event_loop() await loop.run_in_executor(None, time.sleep, 1) return {&#34;message&#34;: &#34;线程池中运行sleep函数&#34;} @router.get(&#34;/c&#34;) async def c(): await asyncio.]]></description>
</item><item>
    <title>Python时间</title>
    <link>http://localhost:1313/python-time/</link>
    <pubDate>Wed, 09 Mar 2022 03:11:16 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://localhost:1313/python-time/</guid>
    <description><![CDATA[1 2 3 4 5 6 7 8 9 10 11  &gt;&gt;&gt; time.strftime(&#39;%X&#39;) &#39;11:09:41&#39; &gt;&gt;&gt; time.strftime(&#39;%x&#39;) &#39;03/09/22&#39; &gt;&gt;&gt; time.strftime(&#39;%d&#39;) &#39;09&#39; &gt;&gt;&gt; time.strftime(&#39;%y&#39;) &#39;22&#39; &gt;&gt;&gt; time.strftime(&#39;%m&#39;) &#39;03&#39; &gt;&gt;&gt;   ]]></description>
</item><item>
    <title>将flask应用部署到heroku</title>
    <link>http://localhost:1313/flask-in-heroku/</link>
    <pubDate>Sat, 05 Mar 2022 09:35:28 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://localhost:1313/flask-in-heroku/</guid>
    <description><![CDATA[准备工作  注册heroku 在GitHub上创建一个repo 在heroku里创建一个Python app，并且关联到GitHub  三个文件  main.py requirements.txt Procfile  main.py
1 2 3 4 5 6 7 8 9 10  from flask import Flask app = Flask(__name__) @app.route(&#39;/&#39;) def index(): return &#39;Hello World!&#39; if __name__ == &#39;__main__&#39;: app.run()   requirements.txt
1 2  Flask gunicorn   Procfile
1  web: gunicorn main:app   提交 把这三个文件push到刚才创建的repo。
1 2 3 4 5  git init git remote add origin [repo] git add * git commit -m [msg] git push origin master   设置 进heroku后台]]></description>
</item></channel>
</rss>
