<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>fastapi - 标签 - Go博客</title>
        <link>http://localhost:1313/tags/fastapi/</link>
        <description>fastapi - 标签 - Go博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>lazzygo@outlook.com (Go博客)</managingEditor>
            <webMaster>lazzygo@outlook.com (Go博客)</webMaster><lastBuildDate>Wed, 09 Mar 2022 05:50:17 &#43;0000</lastBuildDate><atom:link href="http://localhost:1313/tags/fastapi/" rel="self" type="application/rss+xml" /><item>
    <title>Fastapi用和不用await的区别</title>
    <link>http://localhost:1313/fastapi-await/</link>
    <pubDate>Wed, 09 Mar 2022 05:50:17 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://localhost:1313/fastapi-await/</guid>
    <description><![CDATA[测试代码： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  from fastapi import APIRouter import time import asyncio router = APIRouter() @router.get(&#34;/a&#34;) async def a(): time.sleep(1) return {&#34;message&#34;: &#34;异步模式，但是同步执行sleep函数，执行过程是串行的&#34;} @router.get(&#34;/b&#34;) async def b(): loop = asyncio.get_event_loop() await loop.run_in_executor(None, time.sleep, 1) return {&#34;message&#34;: &#34;线程池中运行sleep函数&#34;} @router.get(&#34;/c&#34;) async def c(): await asyncio.]]></description>
</item></channel>
</rss>
