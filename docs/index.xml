<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Go博客</title>
        <link>http://localhost:1313/</link>
        <description>学习Go语言，搭建Hugo博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>lazzygo@outlook.com (Go博客)</managingEditor>
            <webMaster>lazzygo@outlook.com (Go博客)</webMaster><lastBuildDate>Tue, 08 Mar 2022 06:20:10 &#43;0000</lastBuildDate>
            <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Bootstrap &amp; CSS笔记</title>
    <link>http://localhost:1313/bootstrap-css/</link>
    <pubDate>Tue, 08 Mar 2022 06:20:10 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://localhost:1313/bootstrap-css/</guid>
    <description><![CDATA[去除输入框阴影 1 2 3 4  input:focus{ border: none !important; box-shadow: none !important; }   ]]></description>
</item><item>
    <title>Auto.js切换UI布局</title>
    <link>http://localhost:1313/autojs-switch-ui/</link>
    <pubDate>Tue, 08 Mar 2022 04:27:46 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://localhost:1313/autojs-switch-ui/</guid>
    <description><![CDATA[切换布局 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  &#34;ui&#34;; 界面1(); function 界面1(){ ui.layout( &lt;vertical&gt; &lt;button id=&#34;ok&#34; text=&#34;切换界面&#34;/&gt; &lt;/vertical&gt; ); ui.ok.click(function(){ 界面2(); }); } function 界面2(){ ui.layout( &lt;vertical&gt; &lt;button id=&#34;ok&#34; text=&#34;点一下回去&#34;/&gt; &lt;/vertical&gt; ); ui.ok.click(function(){ 界面1(); }); }   ]]></description>
</item><item>
    <title>选择比努力更重要</title>
    <link>http://localhost:1313/choice-is-more-important-than-effort/</link>
    <pubDate>Sun, 06 Mar 2022 02:13:52 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://localhost:1313/choice-is-more-important-than-effort/</guid>
    <description><![CDATA[学了JavaScript就同等于拥有跨平台应用开发的能力，前后端通吃，节省大量的学习成本
 放在以前，Linux需要C++，Windows需要C#，Android需要Java，IOS需要Swift，Web前端需要JavaScript，服务器端又是一种抉择，不仅纠结语言，还纠结框架。
  现在只需要JavaScript就能解决以上所有问题，解决学习成本和开发成本，还能顺带小程序也搞定。
 对于个人来说服务器还那么重要吗 静态托管方案有
 Netlify Github Pages 等等数不清的选择  要实现服务端功能呢
 Heroku Docker Hub Deta  并且这些都是免费的，对于学生群体非常友好
还有一个重要的问题 如果只是自己玩玩，并非做专业的开发，还有必要这么深入的学习吗？
框架，开源项目一大堆，随便搬过来整合一下就是一个新的东西。
既然并非从事开发工作，为什么不把时间多投入到生活当中？
为什么要沉迷在这些“学习”当中？
跑步🏃，爬山，骑行🚲，游泳🏊，打篮球🏀，这些不是更有助于身心健康吗？]]></description>
</item><item>
    <title>将flask应用部署到heroku</title>
    <link>http://localhost:1313/flask-in-heroku/</link>
    <pubDate>Sat, 05 Mar 2022 09:35:28 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://localhost:1313/flask-in-heroku/</guid>
    <description><![CDATA[准备工作  注册heroku 在GitHub上创建一个repo 在heroku里创建一个Python app，并且关联到GitHub  三个文件  main.py requirements.txt Procfile  main.py
1 2 3 4 5 6 7 8 9 10  from flask import Flask app = Flask(__name__) @app.route(&#39;/&#39;) def index(): return &#39;Hello World!&#39; if __name__ == &#39;__main__&#39;: app.run()   requirements.txt
1 2  Flask gunicorn   Procfile
1  web: gunicorn main:app   提交 把这三个文件push到刚才创建的repo。
1 2 3 4 5  git init git remote add origin [repo] git add * git commit -m [msg] git push origin master   设置 进heroku后台]]></description>
</item><item>
    <title>“只用”原则</title>
    <link>http://localhost:1313/only/</link>
    <pubDate>Fri, 04 Mar 2022 23:42:27 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://localhost:1313/only/</guid>
    <description><![CDATA[前言  本篇幅仅仅是给自己制定的。首先，我很明确自己不是专业开发人员，也不想从事相关工作。 一切仅从解决问题的角度出发，即使代码写的再烂，只要能跑起来，完成它该做的事情就可以。
 静态博客 只用Hugo，原因（在保证功能够用的情况下）：
 最快，没有之一 最易用 最简单  拒绝hexo，jekyll的原因
 NPM版本与系统的兼容性 Gem，bundle，jekyll安装容易出错，一般只适用于最新版本的软件和系统  拒绝Pelican的原因
 模板太难看，不要花时间去折腾开发模板，Hugo有现成的为什么不用  总结
 不要花时间在开发主题上，直接用现成的 不要把时间浪费在安装上，也许只是一个小报错，少个依赖，安装就能解决，又或者是版本过低，但至少我在hugo上没遇到过任何这类问题  编程语言以及框架等相关的选择  我首先要明确一点，我不是专业开发人员，我不希望从事程序员行业，仅作为爱好，也不想花太多时间钻研，尽可能做出最简单的选择，而不是选择性能最好，也不是最受欢迎。
 一般情况下，只用这三门脚本语言
 Python，相对简单 JavaScript，上天入地，无所不能 Shell，Linux必备  不打算学
 Java，没有使用Java的理由 C#，没有桌面软件、游戏开发的需求 C++，根本不知道C++是干嘛的 Ruby, Perl, R，我的评价是：不如Python jQuery，已经不再流行 设计模式，面向对象编程是什么？我只面向信仰编程 Django，不适合我的开发需求  尽可能少用或者不用的
 PHP，PHP不适合我 Go，虽然这个网站名字叫做“Go博客”，但是我并不打算深入学习Go，主要是它的特性，我没地方用，没有相关需求，Go可以用来提醒我，“编程可以是信仰”   总结：要在折腾的时候少折腾。
 编辑器、文档、软件的选择 日常使用
 Vim，编辑器之神 VSCode，备用  不打算用的
 word, excel, ppt，世界上那么多人连office都不会安装还不是照样活得好好的 Adobe全家桶，我连PS抠图都抠不好，这辈子是不可能碰设计类的软件了 Autodesk全家桶 JetBrains全家桶 Android Studio, Visual Studio，没有相关开发需求，如果有，可以用electron和h5能省下很多学习成本  操作系统的选择 桌面操作系统只用：]]></description>
</item><item>
    <title>网站收藏</title>
    <link>http://localhost:1313/sites/</link>
    <pubDate>Thu, 03 Mar 2022 07:30:14 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://localhost:1313/sites/</guid>
    <description><![CDATA[python  python3-cookbook: https://python3-cookbook.readthedocs.io/zh_CN/  文档生成器/文档主题相关  docusaurus: https://docusaurus.io/zh-CN docute: https://docute.org/zh  图片相关  全平台图标生成: https://realfavicongenerator.net/  Web  Nuxt.js: https://nuxtjs.org/ Next.js: https://nextjs.org/ Manifests Generator: https://tomitm.github.io/appmanifest/ PWA框架PWABuilder(microsoft): https://www.pwabuilder.com/ PWA框架Polymer: https://polymer-library.polymer-project.org PWA框架outweb: https://outweb.io/ axios: https://www.axios-http.cn/docs/intro  Server  nginx: https://www.nginx.cn/doc/ Flask: https://dormousehole.readthedocs.io/en/latest/quickstart.html certbot: https://certbot.eff.org/ candy: https://caddyserver.com/docs/getting-started  免费资源  MongoDB: https://www.mongodb.com/zh-cn/cloud Vercel: https://vercel.com/ Netlify: https://www.netlify.com/ Heroku: https://heroku.com/ Deta: https://www.deta.sh/  自动化  airtest: https://airtest.netease.com/  ]]></description>
</item></channel>
</rss>
